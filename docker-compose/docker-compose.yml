version: '3.8'

services:
  microservice-postgresql:
    image: postgres:16.1
    command:
      - -c
      - 'max_connections=500'
      - -c
      - 'wal_level=logical'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  microservice-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10

  microservice-consul:
    image: docker.io/bitnami/consul:1.17.0
    ports:
      - "8300:8300"
      - "8500:8500"
      - "8600:8600"
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO

  microservice-consul-config-loader:
    image: jhipster/consul-config-loader:v0.4.1
    volumes:
      - ./central-server-config:/config
    environment:
      INIT_SLEEP_SECONDS: 5
      CONSUL_URL: consul
      CONSUL_PORT: 8500

  microservice-prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./prometheus-conf/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--log.level=debug"
    ports:
      - "9090:9090"

  microservice-alertmanager:
    image: prom/alertmanager:v0.26.0
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager-conf/:/etc/alertmanager/
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  microservice-grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false

  microservice-kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: microservice-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://microservice-kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: microservice-kafka
    hostname: microservice-kafka
    container_name: microservice-kafka
    restart: unless-stopped  
    depends_on:
      - microservice-zookeeper

  microservice-zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: microservice-zookeeper
    container_name: microservice-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped

volumes:
  prometheus_data: {}
  grafana_data: {}
  pgdata: {}
